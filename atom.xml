<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ori Donner</title>
  <subtitle>Ori Donner&#39;s Blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://oridonner.github.io/"/>
  <updated>2017-07-12T14:20:21.940Z</updated>
  <id>https://oridonner.github.io/</id>
  
  <author>
    <name>ori donner</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linked Server on SQL Server vNext</title>
    <link href="https://oridonner.github.io/2017/05/vNext-Linked-Server/"/>
    <id>https://oridonner.github.io/2017/05/vNext-Linked-Server/</id>
    <published>2017-05-15T09:25:46.000Z</published>
    <updated>2017-07-12T14:20:21.940Z</updated>
    
    <content type="html"><![CDATA[<p>If you have started Microsoft’s vNext SQL Server on Linux or Docker container and tried to set up a linked server, using SSMS GUI, you probably got this error message: <br><br><br><img src="/images/LinkedServerError.PNG" class="col-md-7"></p>
<p><br><br><br><br><br>The reason is that Microsoft doesn’t support distributed queries on SQL Server vNext (yet), as published on Microsoft’s <a href="https://docs.microsoft.com/en-us/sql/linux/sql-server-linux-release-notes" target="_blank" rel="external">official site</a>:<br><br><br><img src="/images/LinkedServerUnsupported.PNG" alt=""></p>
<p>Linked server is an essential tool in SQL Server; The fact that distributed query feature is not yet supported is quite puzzling, given that <a href="https://www.microsoft.com/en-us/download/details.aspx?id=28160" target="_blank" rel="external">SQL Server ODBC Driver for Linux</a> is available since 2012.</p>
<p>But, if you are running SQL Server vNext on your dev-test Windows VirtualBox, linked server is available for you. And here you have another good reason for <a href="http://sqldevops.tech/2017/04/SQL-Server-vNext-Vagrant-Box/" target="_blank" rel="external">starting SQL Server vNext on Windows VirtualBox</a>. </p>
<h2 id="Linked-Server-on-Windows-VirtualBox"><a href="#Linked-Server-on-Windows-VirtualBox" class="headerlink" title="Linked Server on Windows VirtualBox"></a>Linked Server on Windows VirtualBox</h2><p>This suggested solution will only work for SQL Server vNext running on Windows VirtualBox, trying to execute it on Docker container or Linux, will output the same error as mentioned above:</p>
<p><strong>1</strong>. Follow my <a href="http://sqldevops.tech/2017/04/SQL-Server-vNext-Vagrant-Box/" target="_blank" rel="external">last post</a> about running SQL Server on Windows VirtualBox, download the <a href="https://atlas.hashicorp.com/sqldevops/boxes/sql-server-vnext/versions/1.01" target="_blank" rel="external">Vagrant box</a> (I have just updated vNext CTP 2.0), spin up the server and finally connect to it with SSMS.</p>
<p><strong>2</strong>. Use <a href="https://docs.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/distributed-queries-stored-procedures-transact-sql" target="_blank" rel="external">distributed queries stored procedures</a> to create linked server :</p>
<p><code>EXEC master.dbo.sp_addlinkedserver</code><br><code>@server = N&#39;linked-server-name&#39;,</code><br><code>@srvproduct=N&#39;&#39;,</code><br><code>@provider=N&#39;SQLNCLI&#39;,</code><br><code>@datasrc=N&#39;network-name-of-sql-server or servername\instancename&#39;</code><br><code>GO</code> </p>
<p><strong>3</strong>. Create SQL Server login on your source SQL Server, for the remote login stored procedure (@rmtuser,@rmtpassword) :</p>
<p><code>EXEC master.dbo.sp_addlinkedsrvlogin</code><br><code>@rmtsrvname=N&#39;linked-server-name&#39;,</code><br><code>@useself=N&#39;False&#39;,</code><br><code>@locallogin=NULL,</code><br><code>@rmtuser=N&#39;sql-server-user-name&#39;,</code><br><code>@rmtpassword=&#39;sql-server-user-password&#39;</code><br><code>GO</code></p>
<p><strong>4</strong>. Your linked server is up and running.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;If you have started Microsoft’s vNext SQL Server on Linux or Docker container and tried to set up a linked server, using SSMS GUI, you pr
    
    </summary>
    
    
      <category term="vNnext" scheme="https://oridonner.github.io/tags/vNnext/"/>
    
      <category term="Linux" scheme="https://oridonner.github.io/tags/Linux/"/>
    
      <category term="Linked Server" scheme="https://oridonner.github.io/tags/Linked-Server/"/>
    
  </entry>
  
  <entry>
    <title>3 good reasons for starting SQL Server vNext.</title>
    <link href="https://oridonner.github.io/2017/04/SQL-Server-vNext-Vagrant-Box/"/>
    <id>https://oridonner.github.io/2017/04/SQL-Server-vNext-Vagrant-Box/</id>
    <published>2017-04-02T08:07:02.000Z</published>
    <updated>2017-07-12T14:40:10.573Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SQL-Server-vNext"><a href="#SQL-Server-vNext" class="headerlink" title="SQL Server vNext"></a>SQL Server vNext</h2><p>Nov. 2016, Microsoft announced it’s first SQL Server Linux version (<a href="https://www.microsoft.com/en-us/sql-server/sql-server-vnext-including-Linux" target="_blank" rel="external">vNext</a>); On March 2017 CTP 1.4 was launched; An average rate of approximately one CTP update per month; Microsoft is taking things seriously!   </p>
<p>You probably ask yourself; Why should a SQL Server DBA, works his entire life on Windows OS,  be interested in SQL Server running on Linux?  </p>
<p>I’m going to give you the tools and some good reasons for running SQL Server vNext on your PC’s VirtualBox, for your local Dev\Test\QA environment: </p>
<h3 id="1-Fast-amp-Agile"><a href="#1-Fast-amp-Agile" class="headerlink" title="1. Fast &amp; Agile"></a><em>1. Fast &amp; Agile</em></h3><p>Build a “disposable” Dev\Test\QA environment; Spin up the environment (SQL Server on Linux OS) from source code in about <u><strong>50 sec </strong></u> and get a fresh new environment. If code executes not as expected, just destroy the VM and rebuild it. </p>
<h3 id="2-Simple"><a href="#2-Simple" class="headerlink" title="2. Simple"></a><em>2. Simple</em></h3><p>Follow the instructions bellow, in just 5 min reading; Simple to maintain and configure; No previous Linux background is required; No need to change environments works on your Windows environment.</p>
<h3 id="3-Cost-effective"><a href="#3-Cost-effective" class="headerlink" title="3. Cost effective"></a><em>3. Cost effective</em></h3><p>Even though SQL Server Developer edition is free, the hosting Windows Server license, costs. You can save yourself some of those licenses, by running SQL Server on Linux.</p>
<h3 id="4-Mobile"><a href="#4-Mobile" class="headerlink" title="4. Mobile"></a><em>4. Mobile</em></h3><p>Build a local Dev\Test\QA Lab on your Windows PC with VirtualBox; Continue working on your projects when detached from the network or have no internet access.</p>
<h2 id="Build-a-local-Lab-on-your-Windows-PC"><a href="#Build-a-local-Lab-on-your-Windows-PC" class="headerlink" title="Build a local Lab on your Windows PC"></a>Build a local Lab on your Windows PC</h2><p>First, ensure <a href="https://www.virtualbox.org/wiki/Downloads" target="_blank" rel="external">VirtualBox</a> and <a href="https://www.vagrantup.com/downloads.html" target="_blank" rel="external">Vagrant</a> are installed on your PC.  VirtualBox is a cross-platform virtualization application (Hypervisor) that builds virtual machines (guests) on the host.  Vagrant is easy to use tool for managing and automating the Virtual Machine(VM). </p>
<h2 id="Vagrant-Box"><a href="#Vagrant-Box" class="headerlink" title="Vagrant Box"></a>Vagrant Box</h2><p>Vagrant uses a Vagrant box image to spin-up a VirtualBox VM. The image is built with the help of <a href="https://www.packer.io/intro/index.html" target="_blank" rel="external">Packer</a> and saved in <a href="https://atlas.hashicorp.com/boxes/search?utm_source=vagrantcloud.com&amp;vagrantcloud=1" target="_blank" rel="external">Vagrant box repository</a>.<br>With the help of <a href="https://github.com/boxcutter" target="_blank" rel="external">Boxcutter</a> (ready made Packer templates),  I have created a SQL Server vNext 14.0.405 Vagrant box, running on Ubuntu 16.04.2 . You can view the Packer template code on <a href="https://github.com/sqldevops/Packer-SQL-Server-vNext" target="_blank" rel="external">SqlDevops GitHub repo</a>, and download the Vagrant Box from <a href="https://atlas.hashicorp.com/sqldevops/boxes/sql-server-vnext" target="_blank" rel="external">SqlDevops Vagrant repo</a>.</p>
<h2 id="Spin-up-the-Server"><a href="#Spin-up-the-Server" class="headerlink" title="Spin-up the Server"></a>Spin-up the Server</h2><p>In order to spin up a VM with Vagrant, follow these 4 simple steps:</p>
<ol>
<li><p>Create a new folder (vNext) on your host machine, and switch into it:<br><code>c:\&gt; mkdir vNext</code><br><code>c:\&gt; cd vNext</code></p>
</li>
<li><p>Start a new Vagrantfile:<br><code>c:\vNext&gt; Vagrant init -m</code></p>
</li>
<li><p>Open the Vagrantfile with your favorite text editor and copy the code below :<br><code>Vagrant.configure(&quot;2&quot;) do |config|</code><br><code>config.vm.define &quot;mssql&quot; do |mssql|</code><br>   <code>mssql.vm.box = &quot;sqldevops/sql-server-vnext&quot;</code><br>   <code>mssql.vm.hostname = &quot;mssql-vnext&quot;</code><br>   <code>mssql.vm.network &quot;private_network&quot;, ip:&quot;192.168.33.10&quot;</code><br> <code>end</code><br><code>end</code></p>
</li>
<li>Spin up the server :<br><code>c:\vNext&gt; Vagrant up</code></li>
</ol>
<p>The VM’s network configuration is set in the Vagrantfile; I have set it for a local network with a specific IP. More configuration settings can be found on <a href="https://www.vagrantup.com/docs/index.html" target="_blank" rel="external">Vagrant Documentation</a>.</p>
<p>First time executed, Vagrant will download the box locally (it takes a bit of a time). After the box is downloaded, it takes approx. 50 seconds to spin up a full SQL Server vNext instance with the OS from scratch.</p>
<h2 id="Connect-to-SQL-Server-vNext"><a href="#Connect-to-SQL-Server-vNext" class="headerlink" title="Connect to SQL Server vNext"></a>Connect to SQL Server vNext</h2><p>Once the VM is up and running, it can be connected to. Open SSMS, in the <strong> Connect to Server </strong>window, enter the Server’s IP, as set in the Vagrant file. Use the SQL Server Authentication mode, and login  as “<strong>sa</strong>“ with  this password  “<strong>vnext@2017</strong>“.<br>If you want to name your VM’s server instead of using its IP, add this row to the hosts file on your host (c:\windows\system32\drivers\etc\hosts)  , where <strong>mssql-vnext</strong>  is the Servers name:<br><code>mssql-vnext 192.168.33.10</code></p>
<h2 id="Open-a-terminal-to-Ubuntu-Server"><a href="#Open-a-terminal-to-Ubuntu-Server" class="headerlink" title="Open a terminal to Ubuntu Server"></a>Open a terminal to Ubuntu Server</h2><p>In case you want to open a terminal to the Linux Ubuntu OS hosting your SQL Server vNext, just execute this command:<br><code>c:\vNext&gt; Vagrant ssh</code><br>For further information about managing SQL Server on Ubuntu, follow this <a href="https://docs.microsoft.com/en-us/sql/linux/sql-server-linux-management-overview" target="_blank" rel="external">Link</a></p>
<h2 id="SQL-Server-vNext-further-updates"><a href="#SQL-Server-vNext-further-updates" class="headerlink" title="SQL Server vNext further updates"></a>SQL Server vNext further updates</h2><p>Follow SQL Server vNext updates, by joining the early adoption program, on this <a href="http://sqlservervnexteap.azurewebsites.net/" target="_blank" rel="external">link</a>.</p>
<h2 id="Live-YouTube-demo"><a href="#Live-YouTube-demo" class="headerlink" title="Live YouTube demo"></a>Live YouTube demo</h2><div class="video-container"><iframe src="//www.youtube.com/embed/6KLZCDilvg8" frameborder="0" allowfullscreen></iframe></div>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;SQL-Server-vNext&quot;&gt;&lt;a href=&quot;#SQL-Server-vNext&quot; class=&quot;headerlink&quot; title=&quot;SQL Server vNext&quot;&gt;&lt;/a&gt;SQL Server vNext&lt;/h2&gt;&lt;p&gt;Nov. 2016, Mic
    
    </summary>
    
    
      <category term="Linux" scheme="https://oridonner.github.io/tags/Linux/"/>
    
      <category term="vNext" scheme="https://oridonner.github.io/tags/vNext/"/>
    
      <category term="Packer" scheme="https://oridonner.github.io/tags/Packer/"/>
    
      <category term="Vagrant" scheme="https://oridonner.github.io/tags/Vagrant/"/>
    
      <category term="VirtualBox" scheme="https://oridonner.github.io/tags/VirtualBox/"/>
    
      <category term="Ubuntu 16.04" scheme="https://oridonner.github.io/tags/Ubuntu-16-04/"/>
    
      <category term="Virtual Machine" scheme="https://oridonner.github.io/tags/Virtual-Machine/"/>
    
  </entry>
  
  <entry>
    <title>Starting your SQL Server&#39;s DevOps journey</title>
    <link href="https://oridonner.github.io/2017/02/The-DevOps-Pipeline-1/"/>
    <id>https://oridonner.github.io/2017/02/The-DevOps-Pipeline-1/</id>
    <published>2017-02-28T12:08:47.000Z</published>
    <updated>2017-02-28T14:54:39.263Z</updated>
    
    <content type="html"><![CDATA[<hr>
<h2 id="DevOps-Pipeline"><a href="#DevOps-Pipeline" class="headerlink" title="DevOps Pipeline"></a>DevOps Pipeline</h2><p>The core idea of DevOps is to create a repeatable, reliable and incrementally improving process for taking software from concept to customer, enabling a constant flow of changes into production via an automated software production line.</p>
<p>The DevOps pipeline (or Continuous Delivery pipeline), in general, consists of three major stages. Each stage is aimed at verifying the quality of new features and prevent errors from continuing forward in the pipe. DevOps operation refers both application and server level. </p>
<p><strong>Build :</strong> Source code is transferred into a machine-readable package (binaries); New features implemented by the developers are integrated into the source code server on a continuous basis, built, and unit tested.</p>
<p><strong>Test :</strong> The build package is tested to ensure it meets all desired system qualities, in aspects of functionality, security, performance and compliance.</p>
<p><strong>Deploy :</strong> The deployment is automated, allowing for the reliable delivery of new functionality to users within minutes</p>
<p>This is my three steps advice to start your SQL Server DevOps journey :</p>
<h2 id="Step-1-Changing-The-Environment"><a href="#Step-1-Changing-The-Environment" class="headerlink" title="Step 1 - Changing The Environment"></a>Step 1 - Changing The Environment</h2><p>Theoretically, developing a SQL Server database project is equal to developing any other software solution; It’s only a matter of the developing tool you use. Software developers usually work in an offline editing mode - they write code, compile it, and only after running some tests, deploy it on a running machine.       </p>
<p>DBA’s are used to SQL Server Management Studio as their developing tool. SSMS is an online editing tool, works on a live, running system. The first step to being taken to start building the DevOps pipeline is moving to an offline editing mode by changing our developing environment to Visual Studio SSDT.   </p>
<p><img src="/images/visual_studio.jpg" class="pull-right col-md-4"> <a href="https://msdn.microsoft.com/en-us/library/hh272686(v=vs.103).aspx" target="_blank" rel="external">SQL Server Data Tools</a> is a database project development toolset, included in Visual Studio Comunity Edition since 2013, as part of the core product (not to be discussed here, the <a href="http://blog.nwcadence.com/sql-server-data-tools-clearing-up-the-confusion/" target="_blank" rel="external">Visual Studio SSDT shell</a> as a part of the SQL Server installation). The SSDT project system allows developers to have a fully representative source-code backed model of their database for offline development. </p>
<h2 id="Step-2-Under-the-hood-of-SSDT"><a href="#Step-2-Under-the-hood-of-SSDT" class="headerlink" title="Step 2 - Under the hood of SSDT"></a>Step 2 - Under the hood of SSDT</h2><p>Visual Studio SSDT is an IDE;  An integration of different tools and frameworks under a unified GUI. To build and automate the DevOps pipeline, it is necessary to undercover some of Visual Studio’s command line tools:</p>
<ul>
<li><p><a href="https://msdn.microsoft.com/en-us/library/dd393574.aspx#BKMK_CommandPrompt" target="_blank" rel="external"><strong> MSBuild.exe </strong></a> : Visual Studio IDE serializes T-SQL code files (.sql) into MSBuild XML file (.sqlproj). When running code in Visual Studio, MSBuild is executing the MSBuild file under the hood, outputting a database scheme package (DACPAC).  </p>
</li>
<li><p><a href="https://msdn.microsoft.com/en-us/library/ms182489.aspx" target="_blank" rel="external"><strong>MSTest</strong></a> : Visual Studio tool used to run tests.</p>
</li>
<li><p><a href="https://msdn.microsoft.com/en-us/library/hh550080(v=vs.103).aspx" target="_blank" rel="external"><strong> Sqlpackage.exe </strong></a>: Database project deployment and schema compare tool in  Visual Studio, is being executed by the Sqlpackage tool.</p>
</li>
</ul>
<h2 id="Step-3-SQL-Server-DevOps-Pipeline"><a href="#Step-3-SQL-Server-DevOps-Pipeline" class="headerlink" title="Step 3 - SQL Server DevOps Pipeline"></a>Step 3 - SQL Server DevOps Pipeline</h2><p>What has remained to complete the basic SQL Server DevOps pipeline is choosing the source code management tool and the automation tool to orchestrate the process.</p>
<ul>
<li><p><strong>Git :</strong> Client side source code management tool. </p>
</li>
<li><p><strong>GitLab-CI :</strong> GitHub’s “enterprise edition” with Continuous Integration and Continuous Deployment capabilities; GitLab-CI is used as a source code server and Continuous Integration tool.</p>
</li>
</ul>
<p><img src="/images/DevOpsPipeline.bmp"> Figure 1</p>
<p>Figure 1 describes a full possible SQL Server DevOps pipeline design, with the proper automation tools. These set of tools are my best choice; you can choose your own. </p>
<hr>
<h2 id="Coming-next…"><a href="#Coming-next…" class="headerlink" title="Coming next…"></a>Coming next…</h2><p>This is the first post in the series of “The DevOps pipeline” posts. In the next blog post, I will cover the in more depth the differences between SSMS and SSDT; Meanwhile, <a href="https://www.youtube.com/watch?v=e6Z_MpXXnHU&amp;t=3s" target="_blank" rel="external">follow this link</a> and take your first steps in SSDT.</p>
]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h2 id=&quot;DevOps-Pipeline&quot;&gt;&lt;a href=&quot;#DevOps-Pipeline&quot; class=&quot;headerlink&quot; title=&quot;DevOps Pipeline&quot;&gt;&lt;/a&gt;DevOps Pipeline&lt;/h2&gt;&lt;p&gt;The core idea
    
    </summary>
    
    
      <category term="SSDT" scheme="https://oridonner.github.io/tags/SSDT/"/>
    
      <category term="MSBuild" scheme="https://oridonner.github.io/tags/MSBuild/"/>
    
      <category term="Sqlpackage" scheme="https://oridonner.github.io/tags/Sqlpackage/"/>
    
      <category term="Git" scheme="https://oridonner.github.io/tags/Git/"/>
    
      <category term="GitLab-CI" scheme="https://oridonner.github.io/tags/GitLab-CI/"/>
    
  </entry>
  
  <entry>
    <title>SQL Server Loves Open Source</title>
    <link href="https://oridonner.github.io/2017/01/SQL-Server-Loves-Open-Source/"/>
    <id>https://oridonner.github.io/2017/01/SQL-Server-Loves-Open-Source/</id>
    <published>2017-01-15T22:00:00.000Z</published>
    <updated>2017-01-23T15:57:36.153Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Microsoft-Loves-Open-Source"><a href="#Microsoft-Loves-Open-Source" class="headerlink" title="Microsoft Loves Open Source"></a>Microsoft Loves Open Source</h2><p><img src="/images/microsoft_loves_linux.png" class="pull-left col-md-6"> Microsoft approach towards open source has dramatically changed since its CEO Satya Nadella took office in February 2014.<br><a href="https://www.youtube.com/watch?v=HjuGBCB0WSQ&amp;t=608s" target="_blank" rel="external">“Microsoft Loves Open Source”</a>  became a strategy, not just a marketing slogan. On Nov. 16, 2016,  Microsoft released its first <a href="https://blogs.technet.microsoft.com/dataplatforminsider/2016/11/16/announcing-sql-server-on-linux-public-preview-first-preview-of-next-release-of-sql-server/" target="_blank" rel="external">SQL Server version running on Linux</a> and <a href="https://techcrunch.com/2016/11/16/microsoft-joins-the-linux-foundation/" target="_blank" rel="external">joined the Linux Foundation</a> as a Platinium member. </p>
<p>Open-Source eventually revealed its massive impact on the software engineering world. It has been around for more than 30 years, not to be ignored anymore.</p>
<p>Microsoft’s new attitude towards open source is not surprising at all. Big Data and DevOps, two of the hottest buzzwords in the High-Tech industry, profoundly inspired by open-source projects, are changing the rules of the game. A game where Microsoft wants to play, not just as a member, but as a game-changer.</p>
<p>The time has arrived for us, SQL Server DBA’s, to adapt ourselves to this change, open our minds to new ideas, concepts, and tools, from the open source community.</p>
<h2 id="SQL-Server-Loves-Open-Source"><a href="#SQL-Server-Loves-Open-Source" class="headerlink" title="SQL Server Loves Open Source"></a>SQL Server Loves Open Source</h2><p>As a SQL Server DBA, raised on Microsoft technologies, I understand the difficulties associated with adjusting to open source. It is unlike learning another new technology; it is more like adapting yourself to a different culture. It means breaking all your comfort zones. </p>
<p><img src="/images/sql_server_loves_opensource.png" class="pull-right col-md-7"> Adjustment process takes time, practice and patience, but it’s worth the effort and time invested. The more comfortable you become with those tools and concepts, the more you will discover their power, how they collaborate, helping you with cross-platform heavy lifting duties; Offering, usually, unbelievably, simpler and cheaper solutions.</p>
<h2 id="DevOps"><a href="#DevOps" class="headerlink" title="DevOps"></a>DevOps</h2><p>From my point of view, database development projects, are not different from any other software development projects. If you write code, build, test and deploy it, you experience the same challenges and difficulties that software developers experience. So why not enjoy the enormous benefits of DevOps?</p>
<p>However, always remember, <a href="https://opensource.com/business/15/2/without-open-source-there-would-be-no-devops" target="_blank" rel="external">without open source, there would be no DevOps !</a></p>
<h2 id="SQL-DevOps-Blog"><a href="#SQL-DevOps-Blog" class="headerlink" title="SQL DevOps Blog"></a>SQL DevOps Blog</h2><p>So, what is this Blog all about ?</p>
<ul>
<li><p>Integrating SQL Server with Open-Source tools (DevOps mainly, not only).</p>
</li>
<li><p>Smoothening your Open-Source and Command Line learning curve. </p>
</li>
<li><p>Automation and Command Line tools (Microsoft and Open Source).</p>
</li>
</ul>
<p>It’s all about, creating a central hub for sharing news, knowledge and best practices, for SQL Server Devpolers who love Open Source.</p>
<h2 id="Comming-next…"><a href="#Comming-next…" class="headerlink" title="Comming next…"></a>Comming next…</h2><p>This was just an introduction; In the next post, we will take the first step in our DevOps journey, by presenting tools for a basic SQL Server DevOps pipeline.</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Microsoft-Loves-Open-Source&quot;&gt;&lt;a href=&quot;#Microsoft-Loves-Open-Source&quot; class=&quot;headerlink&quot; title=&quot;Microsoft Loves Open Source&quot;&gt;&lt;/a&gt;Micro
    
    </summary>
    
      <category term="Intoduction" scheme="https://oridonner.github.io/categories/Intoduction/"/>
    
    
      <category term="SQL Server" scheme="https://oridonner.github.io/tags/SQL-Server/"/>
    
      <category term="DevOps" scheme="https://oridonner.github.io/tags/DevOps/"/>
    
      <category term="Open Source" scheme="https://oridonner.github.io/tags/Open-Source/"/>
    
  </entry>
  
  <entry>
    <title>SQL Server DevOps jumpstart</title>
    <link href="https://oridonner.github.io/2016/11/SQL-Server-jumpstart-session/"/>
    <id>https://oridonner.github.io/2016/11/SQL-Server-jumpstart-session/</id>
    <published>2016-11-30T16:30:35.000Z</published>
    <updated>2017-07-12T14:26:40.090Z</updated>
    
    <content type="html"><![CDATA[<p>On next Monday, 5 Dec 2016, I will give a 90 min session about SQL Server database devlopment, in the era of DevOps and open source.<br>I will cover some basic agile software development concepts from the perspective of a SQL Server DBA.  </p>
<p>Join our <a href="https://www.meetup.com/Data-platform-Meetup-Israel/events/235727982/" target="_blank" rel="external">Meetup</a>.</p>

	<iframe src="//www.slideshare.net/slideshow/embed_code/key/HxXRAeV3yPuywU" style="width:100%;height:550px" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" allowfullscreen> </iframe> <div style="margin-bottom:5px">

</div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;On next Monday, 5 Dec 2016, I will give a 90 min session about SQL Server database devlopment, in the era of DevOps and open source.&lt;br&gt;I
    
    </summary>
    
    
  </entry>
  
</feed>
